{"version":3,"file":"__layout.svelte-f3e6f8cb.js","sources":["../../../../../src/lib/utils.ts","../../../../../src/lib/pwa/index.ts","../../../../../src/lib/navbar/Navbar.svelte","../../../../../src/routes/__layout.svelte","../../../../../src/lib/global.ts"],"sourcesContent":["// #\r\n\r\n\r\nimport { base } from \"$app/paths\";\r\n\r\nimport { browser } from \"$app/env\";\r\n\r\nasync function importScript(url: string): Promise<void> {\r\n\treturn new Promise<void>((resolve: () => void) => {\r\n\t\tlet el = document.createElement(\"script\");\r\n\t\tel.src = url;\r\n\t\tel.addEventListener(\"load\", resolve);\r\n\t\tdocument.head.append(el);\r\n\t});\r\n};\r\n\r\nexport async function sleep(ms: number): Promise<void> {\r\n\treturn new Promise((resolve: () => void) => {\r\n\t\tglobalThis.setTimeout(resolve, ms);\r\n\t});\r\n};\r\n\r\nexport function toStyleStr(obj: { [key: string]: (string | number) }) {\r\n\treturn (\r\n\t\tObject.entries(obj)\r\n\t\t\t.map(([key, val]) => `${key}:${val}`)\r\n\t\t\t.join(\";\")\r\n\t);\r\n};\r\n\r\n\r\nexport function toMessageComment(messageArray: string[]): string {\r\n\tconst maxLength: number = Math.max(\r\n\t\t...messageArray.map((val) => val.length)\r\n\t);\r\n\tconst border: string = `${\"#\".repeat(maxLength + 10)}\\n`;\r\n\tconst innerMessageArray: string[] = messageArray.map(\r\n\t\t(val: string) =>\r\n\t\t\t`##   ${val}${\" \".repeat(maxLength - val.length)}   ##\\n`\r\n\t);\r\n\r\n\treturn border + innerMessageArray.join(\"\") + border;\r\n};\r\n\r\nexport function toViewportStr(obj: { [key: string]: (string | number) }): string {\r\n\treturn Object.entries(obj)\r\n\t\t.map(([key, val]) => `${key}=${val}`)\r\n\t\t.join(\",\");\r\n};\r\n\r\nfunction downloadFile(blob: Blob, fileName: string): void {\r\n\tlet link = document.createElement(\"a\");\r\n\tlink.download = fileName;\r\n\tlink.href = URL.createObjectURL(blob);\r\n\r\n\tlink.click();\r\n\r\n\tURL.revokeObjectURL(link.href);\r\n\treturn;\r\n};\r\n\r\nlet fileScriptsImportet = false;\r\n\r\nexport async function zipFiles(): Promise<void> {\r\n\r\n\tif (!fileScriptsImportet) {\r\n\t\tawait Promise.all([\r\n\t\t\t\"/jszip.min.js\",\r\n\t\t\t\"/jszip-utils.min.js\",\r\n\t\t].map(importScript));\r\n\r\n\t\tfileScriptsImportet = true;\r\n\t}\r\n\r\n\tlet zip = new JSZip();\r\n\r\n\tconst sources: string[] = (\r\n\t\tawait (await window.fetch(\"./_/sourcemap.js.map\")).json()\r\n\t).sources;\r\n\r\n\tlet filePromises: Promise<void>[] = [];\r\n\r\n\tfor await (let path of sources) {\r\n\t\tconst absPath = path.replace(/^\\.\\.\\//, `${base}/`);\r\n\r\n\t\tconst filePath = ((): (string | false) => {\r\n\t\t\tif (path.startsWith(\"../\")) {\r\n\t\t\t\treturn path.replace(/^\\.\\.\\//, \"\");\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t})();\r\n\r\n\t\tif (filePath) {\r\n\t\t\tfilePromises.push((async (): Promise<void> => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tzip.file(filePath, await JSZipUtils.getBinaryContent(absPath));\r\n\t\t\t})());\r\n\t\t}\r\n\t}\r\n\r\n\tawait Promise.all(filePromises);\r\n\r\n\tdownloadFile(\r\n\t\tawait zip.generateAsync({ type: \"blob\" }),\r\n\t\t`${location.host} - ${base.split(\"/\").pop()}.zip`,\r\n\t);\r\n\r\n\treturn;\r\n};\r\n\r\nfunction setColorTheme(theme: 0 | 1 | 2) {\r\n\tconst themeName = (() => {\r\n\t\tswitch (theme) {\r\n\t\t\tcase (0): return \"black\";\r\n\t\t\tcase (1): return \"dark\";\r\n\t\t\tcase (2): return \"light\";\r\n\t\t}\r\n\t})();\r\n\r\n\tdocument.documentElement.style[\"colorScheme\"] = (themeName === \"light\") ? \"light\" : \"dark\";\r\n\r\n\tfor (const type of [\"bg\", \"fg\", \"hover\", \"active\"]) {\r\n\t\tdocument.documentElement.style.setProperty(`--scrollbar-${type}`, ` var(--scrollbar-${type}-${themeName})`);\r\n\t}\r\n};\r\n\r\nexport const colorTheme = {\r\n\tstore() {\r\n\t\twindow.setTimeout(() => {\r\n\t\t\tconst theme = (+document.querySelector<HTMLInputElement>(\"input[type=radio][name=theme-toggle]:checked\")?.id?.match(/\\d/)?.[0]) as (0 | 1 | 2);\r\n\r\n\t\t\tlocalStorage.setItem(\"colorTheme\", JSON.stringify(theme));\r\n\r\n\t\t\tsetColorTheme(theme);\r\n\t\t});\r\n\t},\r\n\tsetInitial() {\r\n\t\t// document.body.classList.add(\"no-transition\");\r\n\r\n\t\tconst theme = (JSON.parse(localStorage.getItem(\"colorTheme\")) as (0 | 1 | 2)) ?? 1;\r\n\r\n\t\tdocument.querySelector<HTMLInputElement>(`input[type=radio][name=theme-toggle]#theme-${theme}`)?.click();\r\n\r\n\t\tsetColorTheme(theme);\r\n\r\n\t\tfunction recursiveFrameRequest(depth: number) {\r\n\t\t\tif (depth <= 0) {\r\n\t\t\t\tdocument.body.classList.remove(\"no-transition\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\twindow.requestAnimationFrame(() => recursiveFrameRequest(depth - 1));\r\n\t\t}\r\n\r\n\t\trecursiveFrameRequest(5);\r\n\t},\r\n};\r\n\r\n\r\n// let aaaa = (() => {\r\n// \tclass asdf {\r\n// \t\tprivate aaaa: string;\r\n// \t\tconstructor() {\r\n// \t\t\tthis.aaaa = \"bbbb\";\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn new asdf();\r\n// })();\r\n// // firebase:\r\n\r\n// console.log(aaaa);\r\n\r\nimport {\r\n\tFirebaseApp,\r\n\tinitializeApp,\r\n} from \"firebase/app\";\r\n\r\nimport {\r\n\tgetDatabase,\r\n\tref as dbRef,\r\n\tset as dbSet,\r\n\tonValue as dbOnValue,\r\n\tDatabase,\r\n} from \"firebase/database\";\r\n\r\nexport const firebase = new (class {\r\n\tprivate app: FirebaseApp;\r\n\tconstructor() { };\r\n\tpublic async init() {\r\n\t\tthis.app = initializeApp(\r\n\t\t\tawait (await window.fetch(\"/__/firebase/init.json\")).json(),\r\n\t\t);\r\n\t\tthis.database = getDatabase(this.app);\r\n\t};\r\n\tpublic database: Database;\r\n\tpublic ref = dbRef;\r\n\tpublic onValue = dbOnValue;\r\n})();\r\n\r\n\r\n// new URL(location.href).searchParams.append\r\n// new URL(location.href).searchParams.delete\r\n// new URL(location.href).searchParams.forEach\r\n// new URL(location.href).searchParams.get\r\n// new URL(location.href).searchParams.getAll\r\n// new URL(location.href).searchParams.has\r\n// new URL(location.href).searchParams.set\r\n// new URL(location.href).searchParams.sort\r\n// new URL(location.href).searchParams.toString","\r\nimport { base } from \"$app/paths\";\r\n\r\n\r\ninterface _BeforeInstallPromptEvent extends Event {\r\n\tprompt: () => void;\r\n\tuserChoice: { outcome: string };\r\n}\r\n\r\nlet deferredPrompt: _BeforeInstallPromptEvent;\r\n\r\nfunction postChangeMessage(isInstalled: boolean): void {\r\n\twindow.postMessage({\r\n\t\tmsg: \"installedStatusChange\",\r\n\t\tisInstalled,\r\n\t});\r\n\treturn;\r\n}\r\n\r\n\r\nfunction reloadWhenReady() {\r\n\r\n\tfunction checkReadyState(): boolean {\r\n\t\tif (document.readyState === \"complete\") {\r\n\t\t\twindow.setTimeout(() => location.reload(), 100);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tif (!checkReadyState()) {\r\n\t\tdocument.addEventListener(\"readystatechange\", (): void => {\r\n\t\t\tcheckReadyState();\r\n\t\t});\r\n\t}\r\n}\r\n\r\nasync function downloadUncachedFiles(): Promise<void> {\r\n\r\n\tconst filesToCache: string[] = await (async () => {\r\n\r\n\t\tlet urls: string[] = await (await window.fetch(\"./_/filestocache.json\")).json();\r\n\r\n\t\turls = urls.map((url: string) => new URL(url, `${location.origin}${base}/`).href);\r\n\r\n\t\treturn urls;\r\n\t})();\r\n\r\n\tconst cachedFiles: string[] = await (async () => {\r\n\r\n\t\tlet urls: string[] = [];\r\n\r\n\t\tfor await (const cacheName of await window.caches.keys()) {\r\n\t\t\turls = [...urls, ...((\r\n\t\t\t\tawait (await window.caches.open(cacheName)).keys()\r\n\t\t\t).map(\r\n\t\t\t\t({ url }) => url\r\n\t\t\t))];\r\n\t\t}\r\n\r\n\t\treturn urls;\r\n\t})();\r\n\r\n\tconst filesToDownload = filesToCache.filter(\r\n\t\t(val: string) => !cachedFiles.includes(val)\r\n\t);\r\n\r\n\tconst fetchPromises: Promise<Response>[] = filesToDownload.map(\r\n\t\t(file: string) => window.fetch(file)\r\n\t);\r\n\r\n\tawait Promise.all(fetchPromises);\r\n\r\n\treturn;\r\n}\r\n\r\nexport const PWA = {\r\n\r\n\tasync clearCacheAndReload() {\r\n\r\n\t\ttry {\r\n\t\t\tawait (await navigator.serviceWorker?.getRegistration?.())?.unregister?.();\r\n\t\t} catch { }\r\n\r\n\t\tawait fetch(`/clear-site-data/?random=${Math.floor(Math.random() * 1e10)}`);\r\n\r\n\t\tfor await (let cacheName of await window.caches.keys()) {\r\n\t\t\tawait window.caches.delete(cacheName);\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"afterReload\", \"reloadAgain\");\r\n\t\treloadWhenReady();\r\n\r\n\t\treturn;\r\n\t},\r\n\tasync installAppOrDownload() {\r\n\t\tif (deferredPrompt?.prompt) {\r\n\t\t\tdeferredPrompt.prompt();\r\n\t\t} else {\r\n\t\t\twindow.localStorage.setItem(\"afterReload\", \"downloadFiles\");\r\n\t\t\twindow.setTimeout(() => location.reload());\r\n\t\t}\r\n\t\treturn;\r\n\t},\r\n\tasync preparePwa() {\r\n\t\t{\r\n\t\t\tswitch (localStorage.getItem(\"afterReload\")) {\r\n\t\t\t\tcase (\"downloadFiles\"): {\r\n\t\t\t\t\tlocalStorage.removeItem(\"afterReload\");\r\n\r\n\t\t\t\t\tawait downloadUncachedFiles();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase (\"reloadAgain\"): {\r\n\t\t\t\t\tif (JSON.parse(localStorage.getItem(\"isInstalled\"))) {\r\n\t\t\t\t\t\tlocalStorage.setItem(\"afterReload\", \"downloadFiles\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlocalStorage.setItem(\"afterReload\", \"reloadThirdTime\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treloadWhenReady();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase (\"reloadThirdTime\"): {\r\n\t\t\t\t\tlocalStorage.removeItem(\"afterReload\");\r\n\r\n\t\t\t\t\treloadWhenReady();\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\t// event listeners\r\n\t\t\twindow.addEventListener(\"beforeinstallprompt\", async (evt: Event) => {\r\n\t\t\t\tevt.preventDefault();\r\n\r\n\t\t\t\tpostChangeMessage(false);\r\n\r\n\t\t\t\tlocalStorage.removeItem(\"isInstalled\");\r\n\r\n\t\t\t\tdeferredPrompt = evt as _BeforeInstallPromptEvent;\r\n\r\n\t\t\t});\r\n\r\n\t\t\twindow.addEventListener(\"appinstalled\", async (evt: Event) => {\r\n\r\n\t\t\t\tpostChangeMessage(true);\r\n\r\n\t\t\t\twindow.localStorage.setItem(\"afterReload\", \"downloadFiles\");\r\n\r\n\t\t\t\tlocalStorage.setItem(\"isInstalled\", JSON.stringify(true));\r\n\r\n\t\t\t\twindow.setTimeout(() => location.reload());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- # -->\r\n<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\timport {\r\n\t\tfade,\r\n\t\tblur,\r\n\t\tfly,\r\n\t\tslide,\r\n\t\tscale,\r\n\t\tdraw,\r\n\t\tcrossfade,\r\n\t} from \"svelte/transition\";\r\n\r\n\timport {\r\n\t\tzipFiles, //\r\n\t\tcolorTheme, //\r\n\t} from \"$lib/utils\";\r\n\r\n\timport { PWA } from \"$lib/pwa/\";\r\n\r\n\tlet showAppIcon = false;\r\n\r\n\tlet isFullscreen: boolean = false;\r\n\r\n\tonMount(async () => {\r\n\t\twindow.addEventListener(\"message\", ({ data }) => {\r\n\t\t\tif (data.msg === \"installedStatusChange\") {\r\n\t\t\t\tshowAppIcon = !data.isInstalled;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst fullscreenMatch: MediaQueryList = window.matchMedia(\r\n\t\t\t\"(display-mode: fullscreen)\",\r\n\t\t);\r\n\r\n\t\tisFullscreen = fullscreenMatch.matches;\r\n\r\n\t\tfullscreenMatch.onchange = (evt: MediaQueryListEvent) => {\r\n\t\t\tisFullscreen = evt.matches;\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<nav>\r\n\t<section class=\"buttons\">\r\n\t\t<button\r\n\t\t\ttitle=\"share\"\r\n\t\t\tclass=\"bi-share-fill\"\r\n\t\t\ton:click={() => {\r\n\t\t\t\tnavigator.share?.({\r\n\t\t\t\t\turl: location.href,\r\n\t\t\t\t\ttitle: document.title,\r\n\t\t\t\t\ttext: document.title,\r\n\t\t\t\t});\r\n\t\t\t}}\r\n\t\t/>\r\n\r\n\t\t<button\r\n\t\t\ttitle=\"pop out window\"\r\n\t\t\tclass=\"bi-box-arrow-up-right\"\r\n\t\t\ton:click={async () => {\r\n\t\t\t\twindow.open(location.href, \"_blank\", \"location=yes\");\r\n\t\t\t}}\r\n\t\t/>\r\n\r\n\t\t<button\r\n\t\t\ttitle=\"clear cache & reload\"\r\n\t\t\tclass=\"bi-arrow-clockwise\"\r\n\t\t\ton:click={PWA.clearCacheAndReload}\r\n\t\t/>\r\n\r\n\t\t<button\r\n\t\t\ttitle=\"download source code as ZIP\"\r\n\t\t\tclass=\"bi-file-earmark-zip-fill\"\r\n\t\t\ton:click={zipFiles}\r\n\t\t/>\r\n\r\n\t\t<button\r\n\t\t\tclass=\"theme-toggle-labels\"\r\n\t\t\ttitle=\"toggle light theme\"\r\n\t\t\ton:click={colorTheme.store}\r\n\t\t>\r\n\t\t\t<label for=\"theme-1\" class=\"bi-moon-fill\" />\r\n\t\t\t<label for=\"theme-2\" class=\"bi-moon\" />\r\n\t\t\t<label for=\"theme-0\" class=\"bi-sun-fill\" />\r\n\t\t</button>\r\n\r\n\t\t<button\r\n\t\t\ttitle=\"switch fullscreen mode\"\r\n\t\t\tclass=\"bi-{isFullscreen ? 'fullscreen-exit' : 'fullscreen'}\"\r\n\t\t\ton:click={async () => {\r\n\t\t\t\tif (!isFullscreen) {\r\n\t\t\t\t\tisFullscreen = true;\r\n\t\t\t\t\tawait document.documentElement.requestFullscreen?.();\r\n\t\t\t\t} else if (document.fullscreenElement) {\r\n\t\t\t\t\tisFullscreen = false;\r\n\t\t\t\t\tawait document.exitFullscreen?.();\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\r\n\t\t<button\r\n\t\t\ttransition:scale\r\n\t\t\ttitle={showAppIcon\r\n\t\t\t\t? \"install PWA (Progressive Web App)\"\r\n\t\t\t\t: \"download website to work offline\"}\r\n\t\t\tclass=\"bi-{showAppIcon ? 'app-indicator' : 'download'}\"\r\n\t\t\ton:click={PWA.installAppOrDownload}\r\n\t\t/>\r\n\t</section>\r\n</nav>\r\n\r\n<style lang=\"scss\">\r\n\tnav {\r\n\t\t// padding: 1rem;\r\n\t\tmargin: 1rem;\r\n\r\n\t\t// border-radius: 1em;\r\n\t\tvertical-align: middle;\r\n\t\ttext-align: center;\r\n\r\n\t\t@media (hover: none) {\r\n\t\t\tfont-size: 1.3em;\r\n\t\t}\r\n\r\n\t\t.buttons {\r\n\t\t\t// margin-bottom: 0.8rem;\r\n\t\t\tdisplay: inline-flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tmax-width: 100%;\r\n\t\t\tjustify-content: center;\r\n\t\t\tgap: 3px;\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tbackground-color: var(--col-3);\r\n\t\t\t\tfont-size: 1.2em;\r\n\r\n\t\t\t\t$padding: 0.4em 0.55em;\r\n\t\t\t\tpadding: $padding;\r\n\r\n\t\t\t\twhite-space: nowrap;\r\n\r\n\t\t\t\tborder: none {\r\n\t\t\t\t\tradius: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&.theme-toggle-labels {\r\n\t\t\t\t\tpadding: 0;\r\n\t\t\t\t\tlabel[for] {\r\n\t\t\t\t\t\tpadding: $padding;\r\n\t\t\t\t\t\tdisplay: none;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$radius: 0.6em;\r\n\t\t\t\t&:first-of-type {\r\n\t\t\t\t\tborder-radius: $radius 0 0 $radius;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:last-of-type {\r\n\t\t\t\t\tborder-radius: 0 $radius $radius 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@media (hover) {\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tbackground-color: var(--col-38);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:active {\r\n\t\t\t\t\tbackground-color: var(--col-48);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>\r\n","<!-- # -->\r\n<script context=\"module\" lang=\"ts\">\r\n\timport { browser } from \"$app/env\";\r\n\r\n\texport async function load({ page, fetch, session, context }) {\r\n\t\tconst baseFolder = browser ? \"./\" : \"/\";\r\n\t\tconst renderInfo = await (await fetch(`${baseFolder}_/info.json`)).json();\r\n\r\n\t\treturn {\r\n\t\t\tprops: {\r\n\t\t\t\trenderInfo,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\timport \"../styles/global.scss\";\r\n\timport { onMount } from \"svelte\";\r\n\r\n\timport GlobalHead from \"$lib/head/GlobalHead.svelte\";\r\n\r\n\timport { onMountFunction } from \"$lib/global\";\r\n\r\n\timport Navbar from \"$lib/navbar/Navbar.svelte\";\r\n\timport NoScript from \"$lib/navbar/NoScript.svelte\";\r\n\r\n\texport let renderInfo;\r\n\r\n\tonMount(async () => {\r\n\t\tawait onMountFunction();\r\n\t});\r\n</script>\r\n\r\n<svelte:head>\r\n\t{#if !browser}\r\n\t\t<GlobalHead {renderInfo} />\r\n\t{/if}\r\n\r\n\t<title>Translate</title>\r\n</svelte:head>\r\n\r\n<!-- svelte-ignore missing-declaration -->\r\n\r\n<input type=\"radio\" name=\"theme-toggle\" id=\"theme-0\" hidden />\r\n<input type=\"radio\" name=\"theme-toggle\" id=\"theme-1\" hidden checked />\r\n<input type=\"radio\" name=\"theme-toggle\" id=\"theme-2\" hidden />\r\n\r\n<section id=\"actual-content\">\r\n\t<NoScript />\r\n\r\n\t<Navbar />\r\n\r\n\t<main>\r\n\t\t<slot />\r\n\t</main>\r\n\r\n\t<footer>\r\n\t\t&copy;\r\n\t\t<!---->\r\n\t\t2021 Benjamin Aster\r\n\t\t<!---->\r\n\t\t&bull;\r\n\t\t<span class=\"version\">\r\n\t\t\tv{renderInfo.version}\r\n\t\t</span>\r\n\t</footer>\r\n</section>\r\n\r\n<style lang=\"scss\">\r\n\t@import \"../styles/functions-mixins\";\r\n\r\n\t#actual-content {\r\n\t\tbackground-color: var(--col-08);\r\n\r\n\t\t// position: absolute;\r\n\t\t// top: 0;\r\n\t\t// left: 0;\r\n\t\t// right: 0;\r\n\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100vh;\r\n\t}\r\n\r\n\tmain {\r\n\t\tpadding: 1rem;\r\n\t\ttext-align: center;\r\n\r\n\t\tflex-grow: 1;\r\n\t}\r\n\r\n\tfooter {\r\n\t\tpadding: 0.5em;\r\n\t\tbackground-color: var(--col-1);\r\n\t\ttext-align: center;\r\n\r\n\t\t.version {\r\n\t\t\tbackground-color: var(--col-2);\r\n\t\t\tborder-radius: 0.4em;\r\n\t\t\tpadding: 0.3em 0.5em;\r\n\t\t}\r\n\t}\r\n</style>\r\n","\r\nimport { PWA } from \"$lib/pwa/\";\r\n\r\nimport {\r\n\tcolorTheme, //\r\n\tfirebase, //\r\n} from \"$lib/utils\";\r\n\r\nexport async function onMountFunction() {\r\n\tawait PWA.preparePwa();\r\n\tcolorTheme.setInitial();\r\n\tfirebase.init();\r\n}\r\n\r\n"],"names":["async","url","Promise","resolve","el","document","createElement","src","addEventListener","head","append","fileScriptsImportet","all","map","importScript","zip","JSZip","sources","window","fetch","json","filePromises","path","absPath","replace","base","filePath","startsWith","push","file","JSZipUtils","getBinaryContent","blob","fileName","link","download","href","URL","createObjectURL","click","revokeObjectURL","generateAsync","type","location","host","split","pop","theme","themeName","documentElement","style","setProperty","colorTheme","store","setTimeout","querySelector","id","match","setItem","JSON","stringify","setInitial","parse","localStorage","getItem","depth","body","classList","remove","requestAnimationFrame","recursiveFrameRequest","firebase","constructor","dbRef","dbOnValue","app","initializeApp","database","getDatabase","this","deferredPrompt","isInstalled","postMessage","msg","readyState","reload","checkReadyState","PWA","serviceWorker","getRegistration","unregister","Math","floor","random","cacheName","caches","keys","delete","prompt","removeItem","filesToCache","urls","origin","cachedFiles","open","fetchPromises","filter","val","includes","downloadUncachedFiles","evt","preventDefault","ctx","clearCacheAndReload","zipFiles","installAppOrDownload","ctx2","__awaiter2","__awaiter","thisArg","_arguments","P","generator","showAppIcon","isFullscreen","data","fullscreenMatch","matchMedia","matches","onchange","share","title","text","fullscreenElement","exitFullscreen","requestFullscreen","version","page","session","context","props","renderInfo","fetch2","preparePwa","init","onMountFunction"],"mappings":"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"}